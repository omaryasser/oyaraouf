{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/omar/Documents/Projects/oyaraouf/lib/thoughtsRetriever.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\n\nexport type Thought = {\n  slug: string;\n  title: string;\n  date: string;\n  summary: string | null;\n  content: string;\n  type: string;\n  previousSlug: string | null;\n  nextSlug: string | null;\n};\n\n/**\n * Gets all thoughts from the `app/thoughts/data` folder.\n */\nexport function getAllThoughts(): Thought[] {\n  const thoughtsDir = path.join(process.cwd(), 'app', 'thoughts', 'data');\n  const filenames = fs.readdirSync(thoughtsDir);\n\n  let thoughts = filenames\n    .filter((file) => file.endsWith('.md'))\n    .map((file) => {\n      const filePath = path.join(thoughtsDir, file);\n      const rawContent = fs.readFileSync(filePath, 'utf8');\n      const { data, content } = matter(rawContent);\n\n      return {\n        slug: file.replace(/\\.md$/, ''), // e.g. \"resume-advice.md\" => \"resume-advice\"\n        title: data.title ?? 'Untitled Thought',\n        date: data.date ?? 'No Date',\n        summary: data.summary ?? null,\n        type: data.type ?? 'No type',\n        content,\n      } as Thought;\n    });\n    thoughts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    thoughts.map((thought, idx) => {\n      thought.previousSlug = idx > 0 ? thoughts[idx - 1].slug : null;\n      thought.nextSlug = idx < thoughts.length - 1 ? thoughts[idx + 1].slug : null;\n      return thought;\n    });\n    return thoughts;\n}\n\nexport function getThoughtBySlug(slug: string): Thought | null {\n  const thoughts = getAllThoughts();\n  for (const thought of thoughts) {\n    if (thought.slug === slug) {\n      return thought;\n    }\n  }\n  return null;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAgBO,SAAS;IACd,MAAM,cAAc,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,YAAY;IAChE,MAAM,YAAY,6FAAA,CAAA,UAAE,CAAC,WAAW,CAAC;IAEjC,IAAI,WAAW,UACZ,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,CAAC,QAC/B,GAAG,CAAC,CAAC;QACJ,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,aAAa;QACxC,MAAM,aAAa,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC7C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;QAEjC,OAAO;YACL,MAAM,KAAK,OAAO,CAAC,SAAS;YAC5B,OAAO,KAAK,KAAK,IAAI;YACrB,MAAM,KAAK,IAAI,IAAI;YACnB,SAAS,KAAK,OAAO,IAAI;YACzB,MAAM,KAAK,IAAI,IAAI;YACnB;QACF;IACF;IACA,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO;IAC7E,SAAS,GAAG,CAAC,CAAC,SAAS;QACrB,QAAQ,YAAY,GAAG,MAAM,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,GAAG;QAC1D,QAAQ,QAAQ,GAAG,MAAM,SAAS,MAAM,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,GAAG;QACxE,OAAO;IACT;IACA,OAAO;AACX;AAEO,SAAS,iBAAiB,IAAY;IAC3C,MAAM,WAAW;IACjB,KAAK,MAAM,WAAW,SAAU;QAC9B,IAAI,QAAQ,IAAI,KAAK,MAAM;YACzB,OAAO;QACT;IACF;IACA,OAAO;AACT"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/omar/Documents/Projects/oyaraouf/app/thoughts/thoughtsList.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/thoughts/thoughtsList.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/thoughts/thoughtsList.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/omar/Documents/Projects/oyaraouf/app/thoughts/thoughtsList.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/thoughts/thoughtsList.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/thoughts/thoughtsList.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/omar/Documents/Projects/oyaraouf/app/thoughts/page.tsx"],"sourcesContent":["import { getAllThoughts } from \"@/lib/thoughtsRetriever\";\nimport ThoughtsListing from \"./thoughtsList\";\n\n\nexport default function ThoughtsListingPage() {\n  const thoughts = getAllThoughts();\n\n  return <ThoughtsListing thoughts={thoughts} />;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAGe,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,wHAAA,CAAA,iBAAc,AAAD;IAE9B,qBAAO,8OAAC,gIAAA,CAAA,UAAe;QAAC,UAAU;;;;;;AACpC"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}